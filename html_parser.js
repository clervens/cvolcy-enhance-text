// Generated by CoffeeScript 1.8.0
(function() {
  this.HtmlParser = function() {
    this.filters = [];
  };

  this.HtmlParser.prototype.add_filter = function(filter) {
    var filter_klass;
    filter_klass = window[this._parse_filter_name_to_className(filter)];
    if (typeof filter_klass === "function") {
      this.filters.push(new filter_klass);
    }
  };

  this.HtmlParser.prototype.add_filters = function(filters) {
    var filter_name, _i, _len;
    if (filters instanceof Array) {
      for (_i = 0, _len = filters.length; _i < _len; _i++) {
        filter_name = filters[_i];
        this.add_filter(filter_name);
      }
    } else {
      throw "Wrong parameter type. Expected an Array";
    }
  };

  this.HtmlParser.prototype.parse = function(text) {
    var index;
    for (index in this.filters) {
      text = this.filters[index].apply(text);
    }
    return text;
  };

  this.HtmlParser.prototype._parse_filter_name_to_className = function(filter_name) {
    return filter_name.charAt(0).toUpperCase() + filter_name.slice(1).toLowerCase() + "Filter";
  };

  this.EscapeFilter = function(options) {
    this.options = options;
  };

  this.EscapeFilter.prototype.apply = function(text) {
    var lookup, options, regex;
    regex = /['"><]/gi;
    options = this.options;
    lookup = {
      "'": "&#39;",
      "\"": "&quot;",
      ">": '&gt;',
      "<": '&lt;'
    };
    return text.replace(regex, function(match, elm, n) {
      if (lookup[match]) {
        return lookup[match];
      }
      return match;
    });
  };

  this.YoutubeFilter = function(options) {
    this.options = $.extend({
      width: 420,
      height: 315,
      frameborder: 0,
      wmode: null,
      autoplay: 0,
      hide_related: 1
    }, options);
  };

  this.YoutubeFilter.prototype.apply = function(text) {
    var options, regex;
    regex = /(https?:\/\/)?(www.)?(youtube\.com\/watch\?v=|youtu\.be\/|youtube\.com\/watch\?feature=player_embedded&v=)([A-Za-z0-9_-]*)(\&\S+)?(\?\S+)?/;
    options = this.options;
    return text.replace(regex, function(match, protocole, subdomain, url, youtube_id) {
      var autoplay, frameborder, height, hide_related, params, src, width, wmode;
      width = options["width"];
      height = options["height"];
      frameborder = options["frameborder"];
      wmode = options["wmode"];
      autoplay = options["autoplay"];
      hide_related = options["hide_related"];
      src = "//www.youtube.com/embed/" + youtube_id;
      params = [];
      if (wmode) {
        params.push("wmode=" + wmode);
      }
      if (autoplay) {
        params.push("autoplay=1");
      }
      if (hide_related) {
        params.push("rel=0");
      }
      if (params.length > 0) {
        src += "?" + params.join("&");
      }
      return "<div class=\"youtube_video\"><iframe width=\"" + width + "\" height=\"" + height + "\" src=\"" + src + "\" frameborder=\"" + frameborder + "\" allowfullscreen></iframe></div>";
    });
  };

}).call(this);
